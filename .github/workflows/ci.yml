name: CI

on:
  push:
    branches:
      - "master"
      - "devops"
  pull_request:
    branches:
      - "master"
  workflow_dispatch:

env:
  CLIENT_NAME: client_${{ github.sha }}_${{ github.run_number }}_linux.sh

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.check-success.outputs.status }}
    steps:
      - uses: actions/checkout@v3
      - name: Install needed libraries
        run: sudo apt update && sudo apt install libpqxx-dev libwxgtk3.0-gtk3-dev
      - name: Build application
        run: make
      - name: Prepare artifacts' folder and file for condition of status
        if: always()
        run: |
          mkdir artifacts
          echo ${{ job.status }} > artifacts/status.txt
      - name: Print job status to outputs
        id: check-success
        if: always()
        run: echo ::set-output name=status::$( echo ${{ job.status }} )
      - name: Prepare built client for uploading as artifact
        run: mv main.run artifacts/${{ env.CLIENT_NAME }}
      - name: List directory
        if: always()
        run: ls -laR
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.CLIENT_NAME }}
          path: artifacts

  notify-telegram-curl:
    needs: build
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.CLIENT_NAME }}
          path: artifacts
      - name: List directory
        run: ls -laR
      - name: Print build status
        run: echo ${{ needs.build.outputs.status }}
      - name: Install curl
        run: sudo apt update && sudo apt install curl
      - name: Send notification in telegram
        run: |
          printf -v message "%s\n%s\n%s\n%s" \
            "${{ github.actor }} made an event -- ${{ github.event_name }}." \
            "Changes: https://github.com/${{ github.repository }}/commit/${{ github.sha }}" \
            "Status: ${{ needs.build.outputs.status }}" \
            "Sent by cURL"
          curl -s "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
            -d chat_id=${{ secrets.TELEGRAM_TO }} \
            -d text="$message"
          if [ -e artifacts/${{ env.CLIENT_NAME }} ]; then
            curl -s -F document=@"artifacts/${{ env.CLIENT_NAME }}" \
              "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendDocument?chat_id=${{ secrets.TELEGRAM_TO }}"
          fi

  notify-telegram-appleboy:
    needs: build
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.CLIENT_NAME }}
          path: artifacts
      - name: Send notification in telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} made an event -- ${{ github.event_name }}.
            Changes: https://github.com/${{ github.repository }}/commit/${{ github.sha }}
            Status: ${{ needs.build.outputs.status }}
            Sent by appleboy/telegram-action
          document: artifacts/${{ env.CLIENT_NAME }}
