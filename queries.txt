CREATE DATABASE hotel;
\c hotel;

create TABLE guest(
  guest_id serial PRIMARY KEY,
  last_name VARCHAR(30) NOT null,
  first_name VARCHAR(20) NOT null,
  patronimic VARCHAR(20),
  passport_series VARCHAR(4) NOT null
  CONSTRAINT valid_guest_passport_series CHECK (passport_series ~ '\d{4}'),
  passport_number VARCHAR(6) NOT null
  CONSTRAINT valid_guest_passport_number CHECK (passport_number ~ '\d{6}'),
  CONSTRAINT unique_guest_passport UNIQUE (passport_series, passport_number),
  phone VARCHAR(10)
  CONSTRAINT valid_guest_phone_number CHECK (phone ~ '\d{10}'));

CREATE TABLE hotel_room(
  hotel_room_id INTEGER PRIMARY KEY,
  price_per_day NUMERIC(7, 2) NOT null
  CHECK (price_per_day > 0),
  number_of_rooms INTEGER DEFAULT 1
  CHECK (number_of_rooms > 0),
  area INTEGER NOT null
  CHECK (area > 0),
  service_class VARCHAR(8) DEFAULT 'standard'
  CONSTRAINT valid_service_class CHECK (service_class IN ('standard', 'comfort', 'luxury')),
  kitchen BOOL DEFAULT FALSE);

CREATE TABLE booking(
  booking_id SERIAL PRIMARY KEY,
  booking_date DATE DEFAULT CURRENT_DATE,
  CONSTRAINT valid_booking_date CHECK(booking_date <= arrival),
  arrival DATE NOT null,
  departure DATE NOT null
  CONSTRAINT valid_arrival_departure_dates CHECK(departure > arrival),
  total_cost NUMERIC(8, 2)
  CHECK (total_cost > 0),
  hotel_room_id INTEGER REFERENCES hotel_room
  ON DELETE CASCADE
  ON UPDATE CASCADE,
  CONSTRAINT valid_booking UNIQUE (arrival, departure, hotel_room_id),
  bank_card VARCHAR(19)
  CONSTRAINT valid_card CHECK (bank_card ~ '\d{13-19}'));

CREATE TABLE booking_guest(
   booking_id INTEGER REFERENCES booking
   ON DELETE CASCADE,
   guest_id INTEGER REFERENCES guest
   ON DELETE CASCADE,
   PRIMARY KEY (booking_id, guest_id));

INSERT INTO guest(last_name, first_name, passport_series, passport_number) VALUES 
  ('Ivanov', 'Ivan', '1111', '111111'),
  ('Petrov', 'Pyotr', '2222', '222222'),
  ('Sidorov', 'Boris', '3333', '333333'),
  ('Ivanova', 'Maria', '4444', '444444');

INSERT INTO hotel_room (hotel_room_id, price_per_day, area, service_class) VALUES
  (1, 2000, 30, 'standard'),
  (2, 2500, 35, 'comfort'),
  (3, 3200, 42, 'luxury');

INSERT INTO booking(arrival, departure, hotel_room_id) VALUES
  ('2021-12-27'::DATE, '2021-12-30'::DATE, 1),
  ('2021-12-30'::DATE, '2022-01-08'::DATE, 2),
  ('2022-01-03'::DATE, '2022-01-05'::DATE, 3);

INSERT INTO booking_guest(booking_id, guest_id) VALUES
((SELECT booking_id FROM booking b 
WHERE b.arrival = '2021-12-27'::DATE AND b.departure = '2021-12-30'::DATE AND b.hotel_room_id = 1),
(SELECT guest_id FROM guest
WHERE guest.passport_series = '2222' AND guest.passport_number = '222222')),
((SELECT booking_id FROM booking b 
WHERE b.arrival = '2021-12-30'::DATE AND b.departure = '2022-01-08'::DATE AND b.hotel_room_id = 2),
(SELECT guest_id FROM guest
WHERE guest.passport_series = '3333' AND guest.passport_number = '333333')),
((SELECT booking_id FROM booking b 
WHERE b.arrival = '2022-01-03'::DATE AND b.departure = '2022-01-05'::DATE AND b.hotel_room_id = 3),
(SELECT guest_id FROM guest
WHERE guest.passport_series = '4444' AND guest.passport_number = '444444')),
((SELECT booking_id FROM booking b 
WHERE b.arrival = '2022-01-03'::DATE AND b.departure = '2022-01-05'::DATE AND b.hotel_room_id = 3),
(SELECT guest_id FROM guest
WHERE guest.passport_series = '1111' AND guest.passport_number = '111111'));

/*query to get free rooms for dates specified by the user
(e.g. from 2021-12-27 to 2021-12-29)*/
SELECT * FROM hotel_room r
WHERE r.hotel_room_id NOT IN
(SELECT b.hotel_room_id
FROM booking b
WHERE ('2021-12-27'::DATE, '2021-12-29'::DATE)
OVERLAPS (b.arrival, b.departure));